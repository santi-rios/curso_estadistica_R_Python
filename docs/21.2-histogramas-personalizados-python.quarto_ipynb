{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Ejemplo Práctico: Histogramas y Personalización en Python\"\n",
        "subtitle: \"Visualización avanzada y buenas prácticas\"\n",
        "format:\n",
        "  live-html:\n",
        "    toc: true\n",
        "sidebar: false\n",
        "pyodide: \n",
        "    packages: \n",
        "        - pandas\n",
        "        - matplotlib\n",
        "        - seaborn\n",
        "        - numpy\n",
        "---\n",
        "\n",
        "## Introducción\n",
        "\n",
        "- En esta lección, profundizaremos en la personalización de histogramas y buenas prácticas para visualización en Python.\n",
        "- Usaremos datos simulados de alturas de jirafas en dos islas, como en el ejemplo anterior.\n",
        "\n",
        "---\n",
        "\n",
        "## Simulación de datos\n",
        "\n",
        "```{pyodide}\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "np.random.seed(12)\n",
        "x1 = np.round(np.random.normal(10, 2, 50))\n",
        "x2 = np.round(np.random.normal(18, 1.2, 50))\n",
        "alturas = np.concatenate([x1, x2])\n",
        "islas = np.array([\"Isla #1\"]*50 + [\"Isla #2\"]*50)\n",
        "df = pd.DataFrame({\"altura\": alturas, \"isla\": islas})\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Histograma básico por grupo\n",
        "\n",
        "```{pyodide}\n",
        "plt.figure(figsize=(8,5))\n",
        "sns.histplot(data=df, x=\"altura\", hue=\"isla\", bins=10, alpha=0.7, element=\"step\", stat=\"count\")\n",
        "plt.title(\"Distribución de Alturas de Jirafas por Isla\")\n",
        "plt.xlabel(\"Altura (cm)\")\n",
        "plt.ylabel(\"Frecuencia\")\n",
        "plt.legend(title=\"Isla\")\n",
        "plt.show()\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Personalizar colores y estilos\n",
        "\n",
        "```{pyodide}\n",
        "plt.figure(figsize=(8,5))\n",
        "sns.histplot(data=df, x=\"altura\", hue=\"isla\", bins=10, palette=[\"#00cd00\", \"#00c5cd\"], alpha=0.7, element=\"step\", stat=\"count\")\n",
        "plt.title(\"Distribución de Alturas de Jirafas por Isla\")\n",
        "plt.xlabel(\"Altura (cm)\")\n",
        "plt.ylabel(\"Frecuencia\")\n",
        "plt.legend(title=\"Isla\", loc=\"upper right\")\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Guardar el gráfico como imagen\n",
        "\n",
        "```{pyodide}\n",
        "plt.savefig(\"histograma_jirafas_personalizado.png\", dpi=300)\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Buenas prácticas\n",
        "\n",
        "- Usa títulos y etiquetas descriptivas.\n",
        "- Elige paletas de colores accesibles y consistentes.\n",
        "- Usa `plt.tight_layout()` para evitar que las etiquetas se sobrepongan.\n",
        "- Guarda tus gráficos con alta resolución para presentaciones o publicaciones.\n",
        "\n",
        "---\n",
        "\n",
        "## Ejercicio\n",
        "\n",
        "- Cambia los colores de la paleta por otros de tu preferencia.\n",
        "- Cambia la posición de la leyenda (`loc` puede ser \"upper left\", \"lower right\", etc.).\n",
        "- Guarda el gráfico con otro nombre y diferente resolución.\n",
        "\n",
        "```{pyodide}\n",
        "plt.figure(figsize=(8,5))\n",
        "sns.histplot(data=df, x=\"altura\", hue=\"isla\", bins=10, palette=[\"orange\", \"purple\"], alpha=0.7, element=\"step\", stat=\"count\")\n",
        "plt.title(\"Alturas de Jirafas por Isla (Colores personalizados)\")\n",
        "plt.xlabel(\"Altura (cm)\")\n",
        "plt.ylabel(\"Frecuencia\")\n",
        "plt.legend(title=\"Isla\", loc=\"upper left\")\n",
        "plt.tight_layout()\n",
        "plt.savefig(\"histograma_jirafas_ejercicio.png\", dpi=200)\n",
        "plt.show()\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Reflexión\n",
        "\n",
        "- ¿Qué combinación de colores comunica mejor la diferencia entre los grupos?\n",
        "- ¿Cómo afecta la posición de la leyenda a la claridad del gráfico?\n",
        "\n",
        "Estas prácticas te ayudarán a crear visualizaciones más claras y efectivas en Python."
      ],
      "id": "c8ea9537"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/home/santi/.local/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}