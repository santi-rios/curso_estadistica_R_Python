---
title: "Intervalos de Confianza con Python"
format:
  live-html:
    toc: true
sidebar: false
pyodide: 
    packages: 
        - matplotlib
        - numpy
        - scipy
---

## Introducción

Los intervalos de confianza son rangos que proporcionan una estimación del grado de incertidumbre alrededor de un estadístico de muestra, como la media o una proporción. Nos indican el rango dentro del cual es probable que se encuentre el parámetro real de la población con un cierto nivel de confianza (habitualmente el 95%).

## Conceptos Clave

- **Intervalo de Confianza para la Media:** Proporciona un rango probable para la verdadera media de la población. A menudo calculado usando la media muestral, la desviación estándar de la muestra, y el tamaño de la muestra.

- **Intervalo de Confianza para una Proporción:** Indica un rango para la verdadera proporción de la población. Calculado utilizando la proporción muestral, el tamaño de la muestra, y un estadístico z de la distribución normal estándar.

- **Interpretación:** Un intervalo de confianza del 95% significa que si se toman 100 muestras diferentes y se calculan 100 intervalos, aproximadamente 95 de esos intervalos deberían contener la verdadera media o proporción de la población.

## Ejercicio Práctico en Python

Exploraremos cómo calcular intervalos de confianza para la media utilizando un conjunto de datos simulado.

```{pyodide}
#| exercise: intervalo_confianza
#| exercise.setup:
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm

# Simulación de datos de alturas en cm
np.random.seed(123)
alturas = np.random.normal(loc=170, scale=10, size=100)

# Calcular la media y el error estándar
media_altura = np.mean(alturas)
error_estandar = np.std(alturas, ddof=1) / np.sqrt(len(alturas))

# Calcular el intervalo de confianza del 95% para la media
nivel_confianza = 0.95
z = norm.ppf((1 + nivel_confianza) / 2)  # Valor z para un 95% de confianza
limite_inferior = media_altura - z * error_estandar
limite_superior = media_altura + z * error_estandar

# Mostrar resultados
print(f"Intervalo de Confianza del 95% para la Media:")
print(f"Límite Inferior: {limite_inferior:.2f}")
print(f"Límite Superior: {limite_superior:.2f}")

# Visualización
plt.hist(alturas, bins=20, color="lightgreen", edgecolor='black', alpha=0.7)
plt.title("Distribución de Alturas Simuladas")
plt.xlabel("Alturas (cm)")
plt.axvline(x=limite_inferior, color='blue', linestyle='--', linewidth=2)
plt.axvline(x=limite_superior, color='blue', linestyle='--', linewidth=2)
plt.legend(["Intervalo de Confianza"])
plt.show()
```

## Reflexión y Discusión:

- Examinar el intervalo de confianza calculado: ¿Qué significa en el contexto de estos datos de altura?
- Discute cómo el tamaño de la muestra afecta la amplitud del intervalo de confianza. ¿Qué sucedería si tuvieras una muestra más grande o más pequeña?

Esta lección ofrece un enfoque práctico sobre cómo calcular e interpretar intervalos de confianza en Python. Con estas habilidades, podrás cuantificar la incertidumbre y comunicar tus resultados con mayor claridad y precisión.
