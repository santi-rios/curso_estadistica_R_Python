---
title: "Análisis de Correlación"
subtitle: "Conceptos Clave de Variables"
format: 
    live-revealjs: 
        scrollable: true
webr:
    packages: 
        - ggplot2
pyodide: 
    packages: 
        - numpy
        - matplotlib
        - seaborn
engine: knitr
---

{{< include ../_extensions/r-wasm/live/_knitr.qmd >}}

## Introducción

La correlación es una medida estadística que indica la relación entre dos variables. Nos ayuda a entender cómo una variable puede cambiar en relación con otra. El coeficiente de correlación de Pearson es uno de los métodos más comunes para medir la correlación y cuantifica la dirección y la fuerza de la relación lineal entre dos variables continuas.

---

## Conceptos Clave



    Coeficiente de Correlación de Pearson (r):
        Rango de -1 a 1.
        Un valor cercano a 1 indica una fuerte relación positiva (cuando una variable aumenta, la otra también).
        Un valor cercano a -1 indica una fuerte relación negativa (cuando una variable aumenta, la otra disminuye).
        Un valor cercano a 0 indica poca o ninguna relación lineal.

    Interpretación:
        (r > 0): Correlación positiva.
        (r < 0): Correlación negativa.
        (r = 0): Sin correlación lineal aparente.



---

## Ejercicio Práctico en R

::: {.panel-tabset group="language"}

## R


Analizaremos la relación entre dos variables simuladas: horas de estudio y calificación del examen.

```{webr}
# Simulación de datos
set.seed(123)
horas_estudio <- rnorm(100, mean = 5, sd = 1.5)
calificacion_examen <- 60 + 5 * horas_estudio + rnorm(100, mean = 0, sd = 5)

# Calcular el coeficiente de correlación de Pearson
correlacion <- cor(horas_estudio, calificacion_examen)

# Mostrar resultado
cat("Coeficiente de Correlación de Pearson:", round(correlacion, 2), "\n")

# Visualización de la relación
plot(horas_estudio, calificacion_examen,
     main = "Relación entre Horas de Estudio y Calificación",
     xlab = "Horas de Estudio", ylab = "Calificación",
     col = "blue", pch = 19)
abline(lm(calificacion_examen ~ horas_estudio), col = "red", lwd = 2)
legend("topleft", legend=c("Línea de Regresión"), col=c("red"), lty=1, cex=0.8)
```


## Python

```{pyodide}
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Simulación de datos
np.random.seed(123)
horas_estudio = np.random.normal(loc=5, scale=1.5, size=100)
calificacion_examen = 60 + 5 * horas_estudio + np.random.normal(loc=0, scale=5, size=100)

# Calcular el coeficiente de correlación de Pearson
correlacion = np.corrcoef(horas_estudio, calificacion_examen)[0, 1]

# Mostrar resultado
print(f"Coeficiente de Correlación de Pearson: {correlacion:.2f}")

# Visualización de la relación usando seaborn
plt.figure(figsize=(10, 6))
sns.regplot(x=horas_estudio, y=calificacion_examen, 
            scatter_kws={'color': 'blue'}, 
            line_kws={'color': 'red', 'label': 'Línea de Regresión'})
plt.title("Relación entre Horas de Estudio y Calificación")
plt.xlabel("Horas de Estudio")
plt.ylabel("Calificación")
plt.legend()
plt.show()
``` 

:::

---


## Reflexión y Discusión:


    Examina el valor del coeficiente de correlación calculado: ¿Qué te indica sobre la relación entre las horas de estudio y las calificaciones?
    Discute cómo podrías usar la correlación para explorar otras relaciones en datos reales. ¿Cuáles son algunas limitaciones de usar la correlación para inferir causalidad?

Esta lección proporciona una introducción práctica al análisis de correlación en R, equipando a los estudiantes con la capacidad de identificar y cuantificar relaciones lineales entre variables dentro de un conjunto de datos.