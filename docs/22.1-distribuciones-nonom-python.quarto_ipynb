{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Distribuciones de Probabilidad en Python\"\n",
        "subtitle: \"Simulación y visualización con numpy, scipy y seaborn\"\n",
        "format:\n",
        "  live-html:\n",
        "    toc: true\n",
        "sidebar: false\n",
        "pyodide: \n",
        "    packages: \n",
        "        - pandas\n",
        "        - matplotlib\n",
        "        - seaborn\n",
        "        - numpy\n",
        "resources:\n",
        "  - datos\n",
        "---\n",
        "\n",
        "## Introducción y Objetivos\n",
        "\n",
        "- En Python, puedes simular y visualizar distribuciones de probabilidad usando `numpy`, `scipy.stats` y `seaborn`/`matplotlib`.\n",
        "- Aquí exploraremos la distribución normal, binomial y de Poisson, y cómo graficarlas y simular datos.\n",
        "\n",
        "---\n",
        "\n",
        "## Distribución Normal\n",
        "\n",
        "```{pyodide}\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "np.random.seed(42)\n",
        "datos_normales = np.random.normal(loc=50, scale=10, size=1000)\n",
        "df_normales = pd.DataFrame({'valor': datos_normales})\n",
        "\n",
        "plt.figure(figsize=(8,5))\n",
        "sns.histplot(df_normales['valor'], bins=30, stat=\"density\", color=\"skyblue\", edgecolor=\"black\")\n",
        "sns.kdeplot(df_normales['valor'], color=\"darkblue\", linewidth=2)\n",
        "plt.title(\"Distribución Normal\")\n",
        "plt.xlabel(\"Valores\")\n",
        "plt.ylabel(\"Densidad\")\n",
        "plt.show()\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Distribución Binomial\n",
        "\n",
        "```{pyodide}\n",
        "np.random.seed(123)\n",
        "resultados = np.random.binomial(n=10, p=0.5, size=100)\n",
        "\n",
        "plt.figure(figsize=(8,5))\n",
        "sns.histplot(resultados, bins=range(0,12), color=\"skyblue\", edgecolor=\"black\")\n",
        "plt.title(\"Distribución del Número de Caras en 100 Lanzamientos de Moneda\")\n",
        "plt.xlabel(\"Número de Caras Obtenidas cada 10 Lanzamientos\")\n",
        "plt.ylabel(\"Frecuencia\")\n",
        "plt.show()\n",
        "```\n",
        "\n",
        "- Si la moneda está cargada (p=0.85):\n",
        "\n",
        "```{pyodide}\n",
        "np.random.seed(123)\n",
        "resultados_cargada = np.random.binomial(n=10, p=0.85, size=100)\n",
        "\n",
        "plt.figure(figsize=(8,5))\n",
        "sns.histplot(resultados_cargada, bins=range(0,12), color=\"skyblue\", edgecolor=\"black\")\n",
        "plt.title(\"Distribución del Número de Caras (Moneda Cargada)\")\n",
        "plt.xlabel(\"Número de Caras Obtenidas\")\n",
        "plt.ylabel(\"Frecuencia\")\n",
        "plt.show()\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Distribución de Poisson\n",
        "\n",
        "```{pyodide}\n",
        "np.random.seed(12)\n",
        "mutaciones = np.random.poisson(lam=3, size=1000)\n",
        "\n",
        "plt.figure(figsize=(8,5))\n",
        "sns.histplot(mutaciones, bins=range(0, max(mutaciones)+2), color=\"lightgreen\", edgecolor=\"black\")\n",
        "plt.title(\"Distribución de Mutaciones en Células (Poisson)\")\n",
        "plt.xlabel(\"Número de Mutaciones por Célula\")\n",
        "plt.ylabel(\"Frecuencia\")\n",
        "plt.show()\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Otras Distribuciones\n",
        "\n",
        "- Además de la normal, binomial y Poisson, existen muchas otras distribuciones en `scipy.stats`.\n",
        "- Ejemplos: chi-cuadrada (`scipy.stats.chi2`), t de Student (`scipy.stats.t`), F de Fisher (`scipy.stats.f`), etc.\n",
        "- Consulta la [documentación de scipy.stats](https://docs.scipy.org/doc/scipy/reference/stats.html) para más detalles.\n",
        "\n",
        "---\n",
        "\n",
        "## Reflexión\n",
        "\n",
        "- ¿Cómo cambia la forma de la distribución al modificar los parámetros?\n",
        "- ¿Qué tipo de variables reales se ajustan a cada distribución?\n",
        "\n",
        "Esta lección te da una base para simular y visualizar distribuciones de probabilidad en Python."
      ],
      "id": "e65a783f"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/home/santi/.local/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}