---
title: "Visualización de Resultados de ANOVA en Python"
author: "Traducido y adaptado de R por un asistente de IA"
format: live-html
pyodide: 
  packages: 
      - numpy
      - pandas
      - matplotlib
      - seaborn
---

## Mejores Prácticas para la Visualización de Datos

En el análisis de datos, las **visualizaciones** son herramientas cruciales para comunicar hallazgos y patrones. Sin embargo, es fácil caer en trampas que resultan en gráficos engañosos o confusos. A continuación, describimos algunas de las prácticas recomendadas para evitar errores comunes al visualizar los resultados de un ANOVA.

### 1. Cuidado con los Gráficos de Barras para Comparar Medias

Los gráficos de barras son muy comunes, pero **no son la mejor opción** para mostrar la separación de medias entre diferentes grupos. El problema principal es que los gráficos de barras ocultan información crucial sobre la **distribución y dispersión** de los datos.

**Problemas de los gráficos de barras:**

-   **Ocultan la variabilidad**: Solo muestran la media (y a veces el error estándar), pero no cómo se distribuyen los datos dentro de cada grupo.
-   **Pueden ser engañosos**: Dos grupos pueden tener la misma media pero distribuciones muy diferentes (por ejemplo, uno con datos muy agrupados y otro con datos muy dispersos). Un gráfico de barras los haría parecer idénticos.

Para ejemplificar esto, vamos a simular dos grupos de datos. Ambos tendrán la misma media, pero uno tendrá una variabilidad mucho mayor que el otro.

#### Ejemplo en Python

Primero, cargamos las librerías y creamos los datos.


```{pyodide}
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Para reproducibilidad
np.random.seed(123)

# Grupo A: media 50, desviación estándar 5
grupo_A = np.random.normal(loc=50, scale=5, size=100)

# Grupo B: media 50, desviación estándar 15
grupo_B = np.random.normal(loc=50, scale=15, size=100)

# Combinamos los datos en un DataFrame de pandas
datos = pd.DataFrame({
    'grupo': np.repeat(['A', 'B'], 100),
    'valor': np.concatenate([grupo_A, grupo_B])
})

datos.head()
```

Ahora, creemos un gráfico de barras con barras de error (error estándar).

```{pyodide}
plt.figure(figsize=(8, 6))
sns.barplot(x='grupo', y='valor',hue = 'grupo', data=datos, palette='viridis', capsize=0.1)
plt.title('Gráfico de barras con medias y errores estándar')
plt.xlabel('Grupo')
plt.ylabel('Valor promedio')
plt.show()
```

Como puedes observar, el gráfico de barras da la ilusión de que los dos grupos son muy similares, ya que sus medias son casi idénticas. Sin embargo, esto oculta la gran diferencia en la dispersión de los datos.

### 2. Alternativas Recomendadas

Para obtener una visión más completa y honesta de los datos, es mejor utilizar gráficos que muestren la distribución.

#### a) Gráfico de Puntos (Dot Plot o Stripplot)

Muestra cada observación individual. Es excelente para ver la distribución real, la densidad y los posibles valores atípicos.

```{pyodide}
plt.figure(figsize=(8, 6))
sns.stripplot(x='grupo', y='valor', hue = 'grupo', data=datos, jitter=True, palette='viridis', alpha=0.7)
plt.title('Gráfico de Puntos (Stripplot)')
plt.xlabel('Grupo')
plt.ylabel('Valor')
plt.show()
```

Aquí es evidente que el Grupo B tiene una dispersión mucho mayor que el Grupo A.

#### b) Box Plot (Gráfico de Cajas)

Muestra la mediana, los cuartiles y los valores atípicos. Es una forma estandarizada de ver la dispersión y la simetría de los datos.

```{pyodide}
plt.figure(figsize=(8, 6))
sns.boxplot(x='grupo', y='valor', hue = 'grupo', data=datos, palette='viridis')
plt.title('Gráfico de Cajas (Box Plot)')
plt.xlabel('Grupo')
plt.ylabel('Valor')
plt.show()
```

El box plot muestra claramente que la caja del Grupo B es mucho más grande, indicando una mayor variabilidad (rango intercuartílico).

#### c) Gráfico de Violín (Violin Plot)

Combina un box plot con una estimación de la densidad del kernel (la forma de la distribución). Es quizás la mejor opción, ya que muestra la mediana, los cuartiles y la forma completa de la distribución de los datos.

```{pyodide}
plt.figure(figsize=(8, 6))
sns.violinplot(x='grupo', y='valor', hue = 'grupo', data=datos, palette='viridis', inner='quartile')
plt.title('Gráfico de Violín')
plt.xlabel('Grupo')
plt.ylabel('Valor')
plt.show()
```

El gráfico de violín muestra no solo que el Grupo B es más disperso, sino también la forma de su distribución (más ancha).

### Conclusión

Para visualizar los resultados de un ANOVA y comparar grupos, **evita los gráficos de barras**. En su lugar, utiliza **gráficos de cajas, de violín o de puntos** para proporcionar una representación más completa y honesta de tus datos, permitiendo una mejor interpretación de las diferencias y similitudes entre los grupos.
