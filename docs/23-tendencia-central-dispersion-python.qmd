---
title: "Tendencia Central y Dispersión en Python"
subtitle: "Medidas descriptivas y visualización"
format:
  live-html:
    toc: true
sidebar: false
pyodide: 
    packages: 
        - pandas
        - matplotlib
        - seaborn
        - numpy
engine: knitr
---

{{< include ../_extensions/r-wasm/live/_knitr.qmd >}}

## Introducción

- Las medidas de tendencia central y dispersión son fundamentales para describir y entender la distribución de los datos.
- En Python, puedes calcularlas fácilmente con `pandas` y `numpy`.

---

## Simulación de datos de alturas de jirafas

Supongamos que tenemos dos grupos de jirafas de dos islas diferentes:

```{pyodide}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

np.random.seed(12)
x1 = np.round(np.random.normal(10, 2, 50))
x2 = np.round(np.random.normal(18, 1.2, 50))
alturas = np.concatenate([x1, x2])
islas = np.array(["Isla #1"]*50 + ["Isla #2"]*50)
df = pd.DataFrame({"altura": alturas, "isla": islas})
```

---

## Medidas de tendencia central

```{pyodide}
# Media
media = df.groupby("isla")["altura"].mean()
print("Media por isla:\n", media)

# Mediana
mediana = df.groupby("isla")["altura"].median()
print("Mediana por isla:\n", mediana)

# Moda
from scipy.stats import mode
moda = df.groupby("isla")["altura"].agg(lambda x: mode(x, keepdims=True).mode[0])
print("Moda por isla:\n", moda)
```

---

## Medidas de dispersión

```{pyodide}
# Varianza
varianza = df.groupby("isla")["altura"].var()
print("Varianza por isla:\n", varianza)

# Desviación estándar
desv_std = df.groupby("isla")["altura"].std()
print("Desviación estándar por isla:\n", desv_std)
```

---

## Visualización de la distribución y medidas

```{pyodide}
plt.figure(figsize=(8,5))
sns.histplot(data=df, x="altura", hue="isla", bins=10, alpha=0.6, element="step", stat="count")
for isla in df["isla"].unique():
    plt.axvline(df[df["isla"]==isla]["altura"].mean(), color=sns.color_palette()[list(df["isla"].unique()).index(isla)], linestyle="--", label=f"Media {isla}")
plt.title("Distribución de Alturas de Jirafas con Media")
plt.xlabel("Altura (cm)")
plt.ylabel("Frecuencia")
plt.legend()
plt.show()
```

---

## Reflexión

- ¿Qué diferencias observas entre los grupos?
- ¿Cómo se relacionan la media, mediana y moda en cada grupo?
- ¿Qué nos dice la dispersión sobre la variabilidad de las alturas?

Estas herramientas te permiten describir y visualizar la estructura de tus datos en Python.
