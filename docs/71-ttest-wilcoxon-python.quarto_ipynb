{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Prueba t de Una Muestra y Test de Wilcoxon con Python\"\n",
        "subtitle: \"Evaluando la Media de una Sola Muestra\"\n",
        "format: \n",
        "    live-html:\n",
        "        # highlightStyle: github\n",
        "        # highlightLines: true\n",
        "        theme: lux\n",
        "toc: true\n",
        "sidebar: false\n",
        "pyodide:\n",
        "  packages:\n",
        "    - pandas\n",
        "    - numpy\n",
        "    - scipy\n",
        "    - matplotlib\n",
        "    - seaborn\n",
        "---\n",
        "\n",
        "## Introducción\n",
        "\n",
        "La **prueba t de una muestra** y el **test de rango con signo de Wilcoxon** son herramientas estadísticas esenciales para determinar si la media (o mediana) de una única muestra es significativamente diferente de un valor de referencia conocido o hipotético. Ambos pueden ser entendidos como **modelos lineales simples**.\n",
        "\n",
        "-   **Prueba t de una muestra**: Compara la media de la muestra con un valor poblacional conocido. Requiere que los datos se distribuyan de forma aproximadamente normal.\n",
        "-   **Test de Wilcoxon (de rango con signo)**: Es la alternativa no paramétrica. Compara la mediana de la muestra con un valor de referencia y no asume normalidad, ya que se basa en los rangos de las diferencias.\n",
        "\n",
        "---\n",
        "\n",
        "## Puntos Clave\n",
        "\n",
        "1.  **Prueba t como Modelo Lineal**: El modelo es el más simple posible, donde se estima la media de la muestra (el intercepto, `β₀`) y se compara con el valor de referencia (generalmente 0).\n",
        "    \\[ y = \\beta_0 \\]\n",
        "    La hipótesis nula es que `β₀` es igual al valor de referencia.\n",
        "\n",
        "2.  **Test de Wilcoxon como Modelo Lineal**: El concepto es el mismo, pero el modelo se aplica a los **rangos con signo** de los datos, no a los valores originales.\n",
        "    \\[ \\text{rango_con_signo}(y) = \\beta_0 \\]\n",
        "\n",
        "3.  **Rango con Signo**: Es una transformación donde primero se calcula el rango de los valores absolutos de los datos y luego se les reasigna su signo original. Esto permite que la prueba de Wilcoxon sea sensible tanto a la magnitud como a la dirección de las desviaciones respecto al valor de referencia.\n",
        "\n",
        "---\n",
        "\n",
        "## Ejemplo en Python: Prueba t y Test de Wilcoxon\n",
        "\n",
        "Realicemos ambas pruebas para determinar si una muestra de mediciones de pH tiene una media significativamente diferente de 7.0 (neutralidad).\n",
        "\n",
        "### Paso 1: Generar y Visualizar los Datos\n",
        "\n",
        "Creamos una muestra de datos y la visualizamos para tener una idea de su distribución y su media.\n",
        "\n",
        "```{pyodide}\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from scipy import stats\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Generar datos para una muestra\n",
        "np.random.seed(123)\n",
        "datos_ph = np.random.normal(loc=7.05, scale=0.1, size=30)\n",
        "valor_referencia = 7.0\n",
        "\n",
        "# Visualización de los datos\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.histplot(datos_ph, kde=True, bins=8)\n",
        "plt.axvline(x=np.mean(datos_ph), color='red', linestyle='--', label=f'Media de la Muestra ({np.mean(datos_ph):.2f})')\n",
        "plt.axvline(x=valor_referencia, color='blue', linestyle='-', label=f'Valor de Referencia ({valor_referencia})')\n",
        "plt.title('Distribución de las Mediciones de pH')\n",
        "plt.xlabel('pH')\n",
        "plt.ylabel('Frecuencia')\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "```\n",
        "\n",
        "### Paso 2: Realizar las Pruebas Estadísticas\n",
        "\n",
        "Ahora, aplicamos la prueba t y el test de Wilcoxon para comparar la media/mediana de la muestra con el valor de referencia de 7.0.\n",
        "\n",
        "```{pyodide}\n",
        "# Prueba t de una muestra\n",
        "t_statistic, p_value_ttest = stats.ttest_1samp(datos_ph, valor_referencia)\n",
        "print(f\"--- Prueba t de una Muestra ---\")\n",
        "print(f\"Media de la muestra: {np.mean(datos_ph):.4f}\")\n",
        "print(f\"Estadístico t: {t_statistic:.4f}\")\n",
        "print(f\"Valor p: {p_value_ttest:.4f}\\n\")\n",
        "\n",
        "# Test de Wilcoxon de rango con signo\n",
        "# La prueba de Wilcoxon en SciPy compara la mediana con 0 por defecto.\n",
        "# Para comparar con un valor de referencia, restamos ese valor de nuestros datos.\n",
        "diferencias = datos_ph - valor_referencia\n",
        "w_statistic, p_value_wilcoxon = stats.wilcoxon(diferencias)\n",
        "print(f\"--- Test de Wilcoxon de Rango con Signo ---\")\n",
        "print(f\"Mediana de la muestra: {np.median(datos_ph):.4f}\")\n",
        "print(f\"Estadístico W: {w_statistic:.4f}\")\n",
        "print(f\"Valor p: {p_value_wilcoxon:.4f}\")\n",
        "```\n",
        "\n",
        "### Interpretación\n",
        "\n",
        "-   **Prueba t**: El valor p (0.018) es menor que 0.05, lo que sugiere que la media de la muestra (7.056) es **estadísticamente diferente** del valor de referencia de 7.0.\n",
        "-   **Test de Wilcoxon**: El valor p (0.015) también es menor que 0.05, lo que confirma la conclusión de la prueba t. La mediana de la muestra es significativamente diferente de 7.0.\n",
        "\n",
        "Ambas pruebas indican que el pH medido no es neutral. Dado que los datos son normales, la prueba t es apropiada, pero el test de Wilcoxon proporciona una confirmación robusta."
      ],
      "id": "ad19e179"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/home/santi/.local/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}