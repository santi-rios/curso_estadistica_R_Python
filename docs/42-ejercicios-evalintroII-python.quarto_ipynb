{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Ejercicio Práctico parte II - Estudio de Caso con Python\"\n",
        "subtitle: \"Evaluación de Introducción a Python y estadística\"\n",
        "author:\n",
        "  - name: \"Mtro. Santiago Ríos\"\n",
        "    email: santiagoboo99@gmail.com\n",
        "    affiliation: \n",
        "      - name: Cursos Orca\n",
        "        city: CDMX\n",
        "        url: orcaasesina.com\n",
        "format: \n",
        "    live-html:\n",
        "        highlight-style: github\n",
        "        highlight-lines: true\n",
        "        theme: solar\n",
        "toc: true\n",
        "sidebar: false\n",
        "pyodide: \n",
        "    packages: \n",
        "        - pandas\n",
        "        - matplotlib\n",
        "        - seaborn\n",
        "        - vega_datasets\n",
        "        # - altair\n",
        "        # - numpy\n",
        "        # - scipy\n",
        "resources:\n",
        "    - datos\n",
        "---\n",
        "\n",
        "```{pyodide}\n",
        "#| caption: Script Limpio en un Paso\n",
        "#| autorun: true\n",
        "\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "oms = pd.read_csv('./datos/oms.csv')\n",
        "\n",
        "# Código de limpieza del ejercicio anterior\n",
        "oms_limpio = (\n",
        "    oms\n",
        "    .drop(columns=['iso2', 'iso3'])\n",
        "    .melt(id_vars=['pais', 'anio'], var_name='clave', value_name='casos')\n",
        "    .dropna(subset=['casos'])\n",
        "    .assign(\n",
        "        clave = lambda df: df['clave'].str.replace('nuevosrecaida', 'nuevos_recaida'),\n",
        "        sexo_edad = lambda df: df['clave'].str.split('_', expand=True)[2]\n",
        "    )\n",
        "    .assign(\n",
        "        sexo = lambda df: df['sexo_edad'].str[0],\n",
        "        edad = lambda df: df['sexo_edad'].str[1:]\n",
        "    )\n",
        "    .rename(columns={'pais': 'pais', 'anio': 'anio'})\n",
        "    .loc[:, ['pais', 'anio', 'sexo', 'edad', 'casos']]\n",
        ")\n",
        "oms_limpio['casos'] = oms_limpio['casos'].astype(int)\n",
        "oms_limpio['anio'] = oms_limpio['anio'].astype(int)\n",
        "\n",
        "```\n",
        "\n",
        "- En este ejercicio, seguiremos trabajando con el conjunto de datos de la Organización Mundial de la Salud (OMS) sobre la incidencia de enfermedades en diferentes países.\n",
        "- Si ya obtuviste los datos limpios, puedes continuar con el siguiente paso.\n",
        "- Tus datos limpios deberían verse de la siguiente manera. En este ejercicio, los datos limpios ya están cargados en la variable `oms_limpio`.\n",
        "\n",
        "```{pyodide}\n",
        "#| autorun: true\n",
        "oms_limpio.head()\n",
        "```\n",
        "\n",
        "- Con estos datos limpios, podríamos comenzar a contestar preguntas sobre nuestros datos: ¿Cuál es el país y año que más casos nuevos registró?, ¿Cuál es el país y año con más casos de recaída?, ¿Hay más casos de *tb* en hombres o mujeres?, entre otras preguntas.\n",
        "- Este tipo de preguntas se verán hasta el tema de pruebas de hipótesis, pero por ahora, nos enfocaremos en la exploración de datos y visualización. por ahora, solo queremos ver tendencias, patrones y relaciones en nuestros datos.\n",
        "- Vamos a visualizar cómo han cambiado los casos de tuberculosis en los últimos años. Nos interesa ver las tendencias por país y año.\n",
        "\n",
        "## Antes de comenzar\n",
        "\n",
        "- ¿Cuántos países hay en nuestros datos?\n",
        "\n",
        "```{pyodide}\n",
        "# exercise: examen1_11\n",
        "\n",
        "# Contar los países únicos en nuestros datos\n",
        "oms_limpio['______'].nunique()\n",
        "```\n",
        "\n",
        "::: {.callout-important collapse=\"true\" title=\"Respuesta\"}\n",
        "```python\n",
        "oms_limpio['pais'].nunique()\n",
        "```\n",
        ":::\n",
        "\n",
        "- Como ves, son muchos países. Para facilitar el análisis, vamos a filtrar para trabajar solo con algunos países: \"Mexico\", \"Canada\", \"Bolivia\", \"Guatemala\", \"United States of America\".\n",
        "\n",
        "## Exploración de datos\n",
        "\n",
        "- Vamos a filtrar y graficar los datos de los países seleccionados.\n",
        "- Nos interesa ver la **tendencia** de los casos de tuberculosis a través de los años.\n",
        "- ¿Cómo podemos ver tendencias en los datos? ¿Qué tipo de gráfico nos permitiría ver esto?\n",
        "- Sugerencia:\n",
        "  - Podríamos usar un gráfico de líneas (`lineplot`) para ver la tendencia de los casos de tuberculosis a través de los años. Es conveniente juntar el gráfico de líneas con un gráfico de puntos (`scatterplot`) para ver mejor la tendencia.\n",
        "  - ¿Qué variables usarías en los ejes `x` y `y`? ¿Qué variable usarías para el `hue` (color)?\n",
        "  - Sugerencia:\n",
        "    - En el eje `x`, podrías poner el año.\n",
        "    - En el eje `y`, podrías poner la cantidad de casos.\n",
        "    - Para el `hue`, podrías poner el país.\n",
        "- **NOTA**: Para agilizar el análisis, vamos a encadenar los métodos: tomamos los datos limpios -> filtramos los países -> graficamos.\n",
        "- Vamos a ver el primer ejemplo juntos:\n",
        "\n",
        "```{pyodide}\n",
        "#| echo: true\n",
        "paises_seleccionados = [\"Mexico\", \"Canada\", \"Bolivia\", \"Guatemala\", \"United States of America\"]\n",
        "\n",
        "datos_filtrados = oms_limpio[oms_limpio['pais'].isin(paises_seleccionados)]\n",
        "\n",
        "sns.lineplot(data=datos_filtrados, x='anio', y='casos', hue='pais')\n",
        "sns.scatterplot(data=datos_filtrados, x='anio', y='casos', hue='pais', legend=False)\n",
        "plt.show()\n",
        "```\n",
        "\n",
        "- ¿Cuál es el problema con el gráfico anterior?\n",
        "- Como ves, tenemos muchas observaciones por cada país y año. Esto hace que el gráfico sea difícil de interpretar.\n",
        "- ¿Qué podríamos hacer para solucionar esto?\n",
        "- Sugerencia:\n",
        "  - Podríamos agrupar los datos por país y año, y promediar los casos de tuberculosis (también podríamos sumar los casos con `.sum()`, ambos son válidos).\n",
        "  - De esta manera, tendríamos una sola observación por país y año.\n",
        "- Completa el gráfico, agrupando los datos por país y año y promediando los casos de tuberculosis:\n",
        "\n",
        "```{pyodide}\n",
        "# exercise: examen1_12\n",
        "\n",
        "# Filtrar, agrupar y graficar\n",
        "datos_agrupados = (\n",
        "    oms_limpio[oms_limpio['pais'].isin(paises_seleccionados)]\n",
        "    .groupby([______, ______])['casos']\n",
        "    .______()\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "sns.lineplot(data=datos_agrupados, x='anio', y='casos', hue='pais')\n",
        "sns.scatterplot(data=datos_agrupados, x='anio', y='casos', hue='pais', legend=False)\n",
        "plt.show()\n",
        "```\n",
        "\n",
        "::: {.callout-important collapse=\"true\" title=\"Respuesta\"}\n",
        "```python\n",
        "datos_agrupados = (\n",
        "    oms_limpio[oms_limpio['pais'].isin(paises_seleccionados)]\n",
        "    .groupby(['anio', 'pais'])['casos']\n",
        "    .mean()\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "sns.lineplot(data=datos_agrupados, x='anio', y='casos', hue='pais')\n",
        "sns.scatterplot(data=datos_agrupados, x='anio', y='casos', hue='pais', legend=False)\n",
        "plt.ylabel(\"Promedio de Casos\")\n",
        "plt.show()\n",
        "```\n",
        ":::\n",
        "\n",
        "- ¿Qué puedes observar en el gráfico?\n",
        "- Claramente hay un país que tiene muchos más casos de tuberculosis que los demás. ¿Cuál es este país?\n",
        "\n",
        "**Respuesta:** Estados Unidos de América (United States of America).\n",
        "\n",
        "- Por último, grafica el número total de casos de tuberculosis por país. ¿Qué tipo de gráfico usarías para esto?\n",
        "- Sugerencia:\n",
        "  - Podrías usar un gráfico de barras (`barplot`) para ver el número total de casos de tuberculosis por país.\n",
        "  - En el eje `x`, podrías poner el país.\n",
        "  - En el eje `y`, podrías poner el número total de casos. Estos casos los puedes obtener sumando los casos de tuberculosis en cada país.\n",
        "\n",
        "```{pyodide}\n",
        "# exercise: examen1_13\n",
        "\n",
        "# Graficar el número total de casos de tuberculosis por país\n",
        "datos_totales = (\n",
        "    oms_limpio[oms_limpio['pais'].isin(paises_seleccionados)]\n",
        "    .groupby(______)\n",
        "    .______(______)\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "sns.barplot(data=datos_totales, x='pais', y='casos')\n",
        "plt.xticks(rotation=45, ha='right')\n",
        "plt.show()\n",
        "```\n",
        "\n",
        "::: {.callout-important collapse=\"true\" title=\"Respuesta\"}\n",
        "```python\n",
        "datos_totales = (\n",
        "    oms_limpio[oms_limpio['pais'].isin(paises_seleccionados)]\n",
        "    .groupby('pais')\n",
        "    ['casos'].sum()\n",
        "    .reset_index()\n",
        ")\n",
        "\n",
        "sns.barplot(data=datos_totales, x='pais', y='casos')\n",
        "plt.xticks(rotation=45, ha='right')\n",
        "plt.ylabel(\"Total de Casos\")\n",
        "plt.show()\n",
        "```\n",
        ":::\n",
        "\n",
        "- Sigue siendo evidente que un país tiene muchos más casos de tuberculosis que los demás.\n",
        "- Sin embargo, esto puede deberse a muchas razones:\n",
        "  - población del país: a mayor población, esperamos mayor número de casos.\n",
        "  - calidad de los servicios de salud: a mejor calidad de los servicios de salud, esperamos menor número de casos.\n",
        "  - la calidad de los datos: es posible que un país tenga un mayor registro de datos que otro. En este caso, podríamos tener un sesgo en los datos.\n",
        "  - entre otras razones.\n",
        "- En lo que queda del curso, vamos a ver cómo podemos responder a estas preguntas y cómo podemos hacer inferencias sobre nuestros datos.\n",
        "- En las siguientes lecciones, veremos cómo podemos hacer pruebas de hipótesis para responder preguntas como: ¿hay una diferencia significativa en el número de casos de tuberculosis entre hombres y mujeres?, ¿hay una diferencia significativa en el número de casos de tuberculosis entre países? Este tipo de preguntas son muy comunes en la investigación científica y en la toma de decisiones basada en datos.\n",
        "- Por ahora, sigue practicando con tus datos y familiarizándote con las funciones de `pandas` y `seaborn`. Trata de tomar datos de diferentes fuentes (preferentemente de tu tesis o trabajo) y practica lo que has aprendido en este curso: limpia tus datos, explóralos y visualízalos.\n",
        "\n",
        "\n",
        "## Extra - Gráfico Interactivo\n",
        "\n",
        "```{pyodide}\n",
        "import altair as alt\n",
        "\n",
        "datos = datos_filtrados()\n",
        "alt.Chart(datos).mark_point().encode(\n",
        "    x='anio',\n",
        "    y='casos',\n",
        "    color='pais',\n",
        "    tooltip=['pais', 'anio']\n",
        ").interactive().properties(\n",
        "  width='container',\n",
        "  height=300\n",
        ")\n",
        "``` "
      ],
      "id": "e282d053"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/home/santi/.local/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}